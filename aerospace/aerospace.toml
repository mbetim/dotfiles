# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 10

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 2
inner.vertical =   2
outer.left =       2
outer.bottom =     2
outer.top =        2
outer.right =      2

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-h = 'move left'
cmd-alt-j = 'move down'
cmd-alt-k = 'move up'
cmd-alt-l = 'move right'

# Join with ctrl-alt
ctrl-alt-h = 'join-with left'
ctrl-alt-j = 'join-with down'
ctrl-alt-k = 'join-with up'
ctrl-alt-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-a = 'resize smart +50'
ctrl-alt-shift-a = 'resize smart -50'
ctrl-alt-enter = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-b = 'workspace B'
alt-g = 'workspace G'
alt-m = 'workspace M'
alt-o = 'workspace O'
alt-v = 'workspace V'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-b = 'move-node-to-workspace B'
alt-shift-g = 'move-node-to-workspace G'
alt-shift-m = 'move-node-to-workspace M'
alt-shift-o = 'move-node-to-workspace O'
alt-shift-v = 'move-node-to-workspace V'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

ctrl-enter = "fullscreen"
ctrl-alt-m = "fullscreen"

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
alt-s = 'mode service'
alt-r = "mode move"

cmd-h = []

[mode.move.binding]
esc = "mode main"
q = "mode main"

h = 'move left'
j = 'move down'
k = 'move up'
l = 'move right'

alt-h = ['join-with left', 'mode main']
alt-j = ['join-with down', 'mode main']
alt-k = ['join-with up', 'mode main']
alt-l = ['join-with right', 'mode main']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[workspace-to-monitor-force-assignment]
V = "secondary"

# Main apps
[[on-window-detected]]
if.app-id = "company.thebrowser.Browser"
run = "move-node-to-workspace G"
[[on-window-detected]]
if.app-id = "com.brave.Browser"
run = "move-node-to-workspace G"
[[on-window-detected]]
if.app-id = "app.zen-browser.zen"
run = "move-node-to-workspace G"
[[on-window-detected]]
if.app-id = "com.github.wez.wezterm"
run = "move-node-to-workspace G"
[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = "move-node-to-workspace G"

# Message apps
[[on-window-detected]]
if.app-id = "net.whatsapp.WhatsApp"
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = "com.microsoft.teams2"
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = "com.hnc.Discord"
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = "app.legcord.Legcord"
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = "com.readdle.SparkDesktop"
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = "com.kishanbagaria.jack"
run = "move-node-to-workspace M"

# Notes?
[[on-window-detected]]
if.app-id = "md.obsidian"
run = "move-node-to-workspace O"

# Databases
[[on-window-detected]]
if.app-id = "com.mongodb.compass"
run = "move-node-to-workspace B"
[[on-window-detected]]
if.app-id = "org.jkiss.dbeaver.core.product"
run = "move-node-to-workspace B"

# Others
[[on-window-detected]]
if.app-id = "com.figma.Desktop"
run = "move-node-to-workspace V"
[[on-window-detected]]
if.app-id = "com.spotify.client"
run = "move-node-to-workspace V"
[[on-window-detected]]
if.app-id = "com.TickTick.task.mac"
run = "move-node-to-workspace V"
[[on-window-detected]]
if.app-id = "com.todoist.mac.Todoist"
run = ["layout floating" ]
[[on-window-detected]]
if.app-id = "com.toggl.daneel"
run = "move-node-to-workspace V"
